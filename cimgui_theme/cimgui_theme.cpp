//This file is automatically generated by generator.lua from https://github.com/Tenarion/cimguiextra
//based on distinct headers files made for imgui
#include "imgui.h"
#include "imgui_internal.h"
#include "./imgui_theme/imgui_theme.h"
#include "cimgui_theme.h"


CIMGUI_API const char* ImGuiTheme_ImGuiTheme_Name(ImGuiThemeType_ theme)
{
    return ImGuiTheme::ImGuiTheme_Name(theme);
}
CIMGUI_API ImGuiThemeType_ ImGuiTheme_ImGuiTheme_FromName(const char* themeName)
{
    return ImGuiTheme::ImGuiTheme_FromName(themeName);
}
CIMGUI_API ImGuiStyle ImGuiTheme_ThemeToStyle(ImGuiThemeType_ theme)
{
    return ImGuiTheme::ThemeToStyle(theme);
}
CIMGUI_API void ImGuiTheme_ApplyTheme(ImGuiThemeType_ theme)
{
    return ImGuiTheme::ApplyTheme(theme);
}
CIMGUI_API ImGuiThemeTweaks* ImGuiThemeTweaks_ImGuiThemeTweaks(void)
{
    return IM_NEW(ImGuiThemeTweaks)();
}
CIMGUI_API void ImGuiThemeTweaks_destroy(ImGuiThemeTweaks* self)
{
    IM_DELETE(self);
}
CIMGUI_API ImGuiTweakedTheme* ImGuiTweakedTheme_ImGuiTweakedTheme(ImGuiThemeType_ theme,const ImGuiThemeTweaks tweaks)
{
    return IM_NEW(ImGuiTweakedTheme)(theme,tweaks);
}
CIMGUI_API void ImGuiTweakedTheme_destroy(ImGuiTweakedTheme* self)
{
    IM_DELETE(self);
}
CIMGUI_API ImGuiStyle ImGuiTheme_TweakedThemeThemeToStyle(const ImGuiTweakedTheme tweaked_theme)
{
    return ImGuiTheme::TweakedThemeThemeToStyle(tweaked_theme);
}
CIMGUI_API void ImGuiTheme_ApplyTweakedTheme(const ImGuiTweakedTheme tweaked_theme)
{
    return ImGuiTheme::ApplyTweakedTheme(tweaked_theme);
}
CIMGUI_API void ImGuiTheme_PushTweakedTheme(const ImGuiTweakedTheme tweaked_theme)
{
    return ImGuiTheme::PushTweakedTheme(tweaked_theme);
}
CIMGUI_API void ImGuiTheme_PopTweakedTheme()
{
    return ImGuiTheme::PopTweakedTheme();
}
CIMGUI_API bool ImGuiTheme_ShowThemeTweakGui(ImGuiTweakedTheme* tweaked_theme)
{
    return ImGuiTheme::ShowThemeTweakGui(tweaked_theme);
}
CIMGUI_API ImGuiStyle ImGuiTheme_SoDark(float hue)
{
    return ImGuiTheme::SoDark(hue);
}
CIMGUI_API ImGuiStyle ImGuiTheme_ShadesOfGray(float rounding,float value_multiplier_front,float value_multiplier_bg)
{
    return ImGuiTheme::ShadesOfGray(rounding,value_multiplier_front,value_multiplier_bg);
}
CIMGUI_API ImGuiStyle ImGuiTheme_Darcula(float rounding,float hue,float saturation_multiplier,float value_multiplier_front,float value_multiplier_bg,float alpha_bg_transparency)
{
    return ImGuiTheme::Darcula(rounding,hue,saturation_multiplier,value_multiplier_front,value_multiplier_bg,alpha_bg_transparency);
}

