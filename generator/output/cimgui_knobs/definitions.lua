local t={
  ImGuiKnobs_Knob={
    [1]={
      args="(const char* label,float* p_value,float v_min,float v_max,float speed,const char* format,ImGuiKnobVariant variant,float size,ImGuiKnobFlags flags,int steps,float angle_min,float angle_max)",
      argsT={
        [1]={
          name="label",
          type="const char*"},
        [2]={
          name="p_value",
          type="float*"},
        [3]={
          name="v_min",
          type="float"},
        [4]={
          name="v_max",
          type="float"},
        [5]={
          name="speed",
          type="float"},
        [6]={
          name="format",
          type="const char*"},
        [7]={
          name="variant",
          type="ImGuiKnobVariant"},
        [8]={
          name="size",
          type="float"},
        [9]={
          name="flags",
          type="ImGuiKnobFlags"},
        [10]={
          name="steps",
          type="int"},
        [11]={
          name="angle_min",
          type="float"},
        [12]={
          name="angle_max",
          type="float"}},
      argsoriginal="(const char* label,float* p_value,float v_min,float v_max,float speed=0,const char* format=\"%.3f\",ImGuiKnobVariant variant=ImGuiKnobVariant_Tick,float size=0,ImGuiKnobFlags flags=0,int steps=10,float angle_min=-1,float angle_max=-1)",
      call_args="(label,p_value,v_min,v_max,speed,format,variant,size,flags,steps,angle_min,angle_max)",
      cimguiname="ImGuiKnobs_Knob",
      defaults={
        angle_max="-1",
        angle_min="-1",
        flags="0",
        format="\"%.3f\"",
        size="0",
        speed="0",
        steps="10",
        variant="ImGuiKnobVariant_Tick"},
      funcname="Knob",
      location="imgui_knobs:47",
      namespace="ImGuiKnobs",
      ov_cimguiname="ImGuiKnobs_Knob",
      ret="bool",
      signature="(const char*,float*,float,float,float,const char*,ImGuiKnobVariant,float,ImGuiKnobFlags,int,float,float)",
      stname=""},
    ["(const char*,float*,float,float,float,const char*,ImGuiKnobVariant,float,ImGuiKnobFlags,int,float,float)"]=nil},
  ImGuiKnobs_KnobInt={
    [1]={
      args="(const char* label,int* p_value,int v_min,int v_max,float speed,const char* format,ImGuiKnobVariant variant,float size,ImGuiKnobFlags flags,int steps,float angle_min,float angle_max)",
      argsT={
        [1]={
          name="label",
          type="const char*"},
        [2]={
          name="p_value",
          type="int*"},
        [3]={
          name="v_min",
          type="int"},
        [4]={
          name="v_max",
          type="int"},
        [5]={
          name="speed",
          type="float"},
        [6]={
          name="format",
          type="const char*"},
        [7]={
          name="variant",
          type="ImGuiKnobVariant"},
        [8]={
          name="size",
          type="float"},
        [9]={
          name="flags",
          type="ImGuiKnobFlags"},
        [10]={
          name="steps",
          type="int"},
        [11]={
          name="angle_min",
          type="float"},
        [12]={
          name="angle_max",
          type="float"}},
      argsoriginal="(const char* label,int* p_value,int v_min,int v_max,float speed=0,const char* format=\"%i\",ImGuiKnobVariant variant=ImGuiKnobVariant_Tick,float size=0,ImGuiKnobFlags flags=0,int steps=10,float angle_min=-1,float angle_max=-1)",
      call_args="(label,p_value,v_min,v_max,speed,format,variant,size,flags,steps,angle_min,angle_max)",
      cimguiname="ImGuiKnobs_KnobInt",
      defaults={
        angle_max="-1",
        angle_min="-1",
        flags="0",
        format="\"%i\"",
        size="0",
        speed="0",
        steps="10",
        variant="ImGuiKnobVariant_Tick"},
      funcname="KnobInt",
      location="imgui_knobs:60",
      namespace="ImGuiKnobs",
      ov_cimguiname="ImGuiKnobs_KnobInt",
      ret="bool",
      signature="(const char*,int*,int,int,float,const char*,ImGuiKnobVariant,float,ImGuiKnobFlags,int,float,float)",
      stname=""},
    ["(const char*,int*,int,int,float,const char*,ImGuiKnobVariant,float,ImGuiKnobFlags,int,float,float)"]=nil},
  color_set_color_set={
    [1]={
      args="(ImColor base,ImColor hovered,ImColor active)",
      argsT={
        [1]={
          name="base",
          type="ImColor"},
        [2]={
          name="hovered",
          type="ImColor"},
        [3]={
          name="active",
          type="ImColor"}},
      argsoriginal="(ImColor base,ImColor hovered,ImColor active)",
      call_args="(base,hovered,active)",
      cimguiname="color_set_color_set",
      constructor=true,
      defaults={},
      funcname="color_set",
      location="imgui_knobs:37",
      ov_cimguiname="color_set_color_set_Color",
      signature="(ImColor,ImColor,ImColor)",
      stname="color_set"},
    [2]={
      args="(ImColor color)",
      argsT={
        [1]={
          name="color",
          type="ImColor"}},
      argsoriginal="(ImColor color)",
      call_args="(color)",
      cimguiname="color_set_color_set",
      constructor=true,
      defaults={},
      funcname="color_set",
      location="imgui_knobs:40",
      ov_cimguiname="color_set_color_set_Nil",
      signature="(ImColor)",
      stname="color_set"},
    ["(ImColor)"]=nil,
    ["(ImColor,ImColor,ImColor)"]=nil},
  color_set_destroy={
    [1]={
      args="(color_set* self)",
      argsT={
        [1]={
          name="self",
          type="color_set*"}},
      call_args="(self)",
      cimguiname="color_set_destroy",
      defaults={},
      destructor=true,
      location="imgui_knobs:37",
      ov_cimguiname="color_set_destroy",
      ret="void",
      signature="(color_set*)",
      stname="color_set"},
    ["(color_set*)"]=nil}}
t.ImGuiKnobs_Knob["(const char*,float*,float,float,float,const char*,ImGuiKnobVariant,float,ImGuiKnobFlags,int,float,float)"]=t.ImGuiKnobs_Knob[1]
t.ImGuiKnobs_KnobInt["(const char*,int*,int,int,float,const char*,ImGuiKnobVariant,float,ImGuiKnobFlags,int,float,float)"]=t.ImGuiKnobs_KnobInt[1]
t.color_set_color_set["(ImColor)"]=t.color_set_color_set[2]
t.color_set_color_set["(ImColor,ImColor,ImColor)"]=t.color_set_color_set[1]
t.color_set_destroy["(color_set*)"]=t.color_set_destroy[1]
 return t